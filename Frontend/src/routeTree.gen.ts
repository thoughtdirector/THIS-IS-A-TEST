/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as SignupImport } from './routes/signup'
import { Route as ResetPasswordImport } from './routes/reset-password'
import { Route as RecoverPasswordImport } from './routes/recover-password'
import { Route as ParkEntryImport } from './routes/park-entry'
import { Route as LoginImport } from './routes/login'
import { Route as LayoutImport } from './routes/_layout'
import { Route as ActivateOrganizationImport } from './routes/_activateOrganization'
import { Route as IndexImport } from './routes/index'
import { Route as ElementsUserDashboardImport } from './routes/elements/userDashboard'
import { Route as ElementsTaskListImport } from './routes/elements/taskList'
import { Route as ElementsSettingsImport } from './routes/elements/settings'
import { Route as ElementsProjectListImport } from './routes/elements/projectList'
import { Route as ElementsProjectImport } from './routes/elements/project'
import { Route as ElementsOrganizationListImport } from './routes/elements/organizationList'
import { Route as ElementsItemsImport } from './routes/elements/items'
import { Route as ElementsDashboardRouterImport } from './routes/elements/dashboardRouter'
import { Route as ElementsDashboardImport } from './routes/elements/dashboard'
import { Route as ElementsChatbotImport } from './routes/elements/chatbot'
import { Route as ElementsAdminImport } from './routes/elements/admin'

// Create/Update Routes

const SignupRoute = SignupImport.update({
  path: '/signup',
  getParentRoute: () => rootRoute,
} as any)

const ResetPasswordRoute = ResetPasswordImport.update({
  path: '/reset-password',
  getParentRoute: () => rootRoute,
} as any)

const RecoverPasswordRoute = RecoverPasswordImport.update({
  path: '/recover-password',
  getParentRoute: () => rootRoute,
} as any)

const ParkEntryRoute = ParkEntryImport.update({
  path: '/park-entry',
  getParentRoute: () => rootRoute,
} as any)

const LoginRoute = LoginImport.update({
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const LayoutRoute = LayoutImport.update({
  id: '/_layout',
  getParentRoute: () => rootRoute,
} as any)

const ActivateOrganizationRoute = ActivateOrganizationImport.update({
  id: '/_activateOrganization',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const ElementsUserDashboardRoute = ElementsUserDashboardImport.update({
  path: '/elements/userDashboard',
  getParentRoute: () => rootRoute,
} as any)

const ElementsTaskListRoute = ElementsTaskListImport.update({
  path: '/elements/taskList',
  getParentRoute: () => rootRoute,
} as any)

const ElementsSettingsRoute = ElementsSettingsImport.update({
  path: '/elements/settings',
  getParentRoute: () => rootRoute,
} as any)

const ElementsProjectListRoute = ElementsProjectListImport.update({
  path: '/elements/projectList',
  getParentRoute: () => rootRoute,
} as any)

const ElementsProjectRoute = ElementsProjectImport.update({
  path: '/elements/project',
  getParentRoute: () => rootRoute,
} as any)

const ElementsOrganizationListRoute = ElementsOrganizationListImport.update({
  path: '/elements/organizationList',
  getParentRoute: () => rootRoute,
} as any)

const ElementsItemsRoute = ElementsItemsImport.update({
  path: '/elements/items',
  getParentRoute: () => rootRoute,
} as any)

const ElementsDashboardRouterRoute = ElementsDashboardRouterImport.update({
  path: '/elements/dashboardRouter',
  getParentRoute: () => rootRoute,
} as any)

const ElementsDashboardRoute = ElementsDashboardImport.update({
  path: '/elements/dashboard',
  getParentRoute: () => rootRoute,
} as any)

const ElementsChatbotRoute = ElementsChatbotImport.update({
  path: '/elements/chatbot',
  getParentRoute: () => rootRoute,
} as any)

const ElementsAdminRoute = ElementsAdminImport.update({
  path: '/elements/admin',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/_activateOrganization': {
      preLoaderRoute: typeof ActivateOrganizationImport
      parentRoute: typeof rootRoute
    }
    '/_layout': {
      preLoaderRoute: typeof LayoutImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      preLoaderRoute: typeof LoginImport
      parentRoute: typeof rootRoute
    }
    '/park-entry': {
      preLoaderRoute: typeof ParkEntryImport
      parentRoute: typeof rootRoute
    }
    '/recover-password': {
      preLoaderRoute: typeof RecoverPasswordImport
      parentRoute: typeof rootRoute
    }
    '/reset-password': {
      preLoaderRoute: typeof ResetPasswordImport
      parentRoute: typeof rootRoute
    }
    '/signup': {
      preLoaderRoute: typeof SignupImport
      parentRoute: typeof rootRoute
    }
    '/elements/admin': {
      preLoaderRoute: typeof ElementsAdminImport
      parentRoute: typeof rootRoute
    }
    '/elements/chatbot': {
      preLoaderRoute: typeof ElementsChatbotImport
      parentRoute: typeof rootRoute
    }
    '/elements/dashboard': {
      preLoaderRoute: typeof ElementsDashboardImport
      parentRoute: typeof rootRoute
    }
    '/elements/dashboardRouter': {
      preLoaderRoute: typeof ElementsDashboardRouterImport
      parentRoute: typeof rootRoute
    }
    '/elements/items': {
      preLoaderRoute: typeof ElementsItemsImport
      parentRoute: typeof rootRoute
    }
    '/elements/organizationList': {
      preLoaderRoute: typeof ElementsOrganizationListImport
      parentRoute: typeof rootRoute
    }
    '/elements/project': {
      preLoaderRoute: typeof ElementsProjectImport
      parentRoute: typeof rootRoute
    }
    '/elements/projectList': {
      preLoaderRoute: typeof ElementsProjectListImport
      parentRoute: typeof rootRoute
    }
    '/elements/settings': {
      preLoaderRoute: typeof ElementsSettingsImport
      parentRoute: typeof rootRoute
    }
    '/elements/taskList': {
      preLoaderRoute: typeof ElementsTaskListImport
      parentRoute: typeof rootRoute
    }
    '/elements/userDashboard': {
      preLoaderRoute: typeof ElementsUserDashboardImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren([
  IndexRoute,
  ActivateOrganizationRoute,
  LayoutRoute,
  LoginRoute,
  ParkEntryRoute,
  RecoverPasswordRoute,
  ResetPasswordRoute,
  SignupRoute,
  ElementsAdminRoute,
  ElementsChatbotRoute,
  ElementsDashboardRoute,
  ElementsDashboardRouterRoute,
  ElementsItemsRoute,
  ElementsOrganizationListRoute,
  ElementsProjectRoute,
  ElementsProjectListRoute,
  ElementsSettingsRoute,
  ElementsTaskListRoute,
  ElementsUserDashboardRoute,
])

/* prettier-ignore-end */
