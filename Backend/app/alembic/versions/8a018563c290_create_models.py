"""Create Models

Revision ID: 8a018563c290
Revises: 
Create Date: 2025-03-26 01:03:34.663235

"""
from alembic import op
import sqlalchemy as sa
import sqlmodel.sql.sqltypes


# revision identifiers, used by Alembic.
revision = '8a018563c290'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('location',
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('location_id', sa.Integer(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=False),
    sa.Column('address', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('city', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=False),
    sa.Column('state', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=True),
    sa.Column('postal_code', sqlmodel.sql.sqltypes.AutoString(length=20), nullable=True),
    sa.Column('country', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=False),
    sa.Column('phone', sqlmodel.sql.sqltypes.AutoString(length=20), nullable=True),
    sa.Column('email', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=True),
    sa.PrimaryKeyConstraint('location_id')
    )
    op.create_table('role',
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('role_id', sa.Integer(), nullable=False),
    sa.Column('role_name', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=False),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.PrimaryKeyConstraint('role_id'),
    sa.UniqueConstraint('role_name')
    )
    op.create_table('bundle',
    sa.Column('bundle_id', sa.Integer(), nullable=False),
    sa.Column('location_id', sa.Integer(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=False),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('price', sa.Float(), nullable=False),
    sa.Column('is_subscription', sa.Boolean(), nullable=True),
    sa.Column('duration_days', sa.Integer(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['location_id'], ['location.location_id'], ),
    sa.PrimaryKeyConstraint('bundle_id')
    )
    op.create_table('user',
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('role_id', sa.Integer(), nullable=False),
    sa.Column('location_id', sa.Integer(), nullable=True),
    sa.Column('email', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=False),
    sa.Column('fullname', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=False),
    sa.Column('phone', sqlmodel.sql.sqltypes.AutoString(length=20), nullable=True),
    sa.Column('hash_password', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('document_type', sqlmodel.sql.sqltypes.AutoString(length=20), nullable=False),
    sa.Column('document_number', sqlmodel.sql.sqltypes.AutoString(length=30), nullable=False),
    sa.Column('terms_accepted', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['location_id'], ['location.location_id'], ),
    sa.ForeignKeyConstraint(['role_id'], ['role.role_id'], ),
    sa.PrimaryKeyConstraint('user_id'),
    sa.UniqueConstraint('email')
    )
    op.create_table('child',
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('child_id', sa.Integer(), nullable=False),
    sa.Column('parent_id', sa.Integer(), nullable=False),
    sa.Column('fullname', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=False),
    sa.Column('birth_date', sa.Date(), nullable=False),
    sa.Column('allergies', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('emergency_contact_name', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=True),
    sa.Column('emergency_contact_phone', sqlmodel.sql.sqltypes.AutoString(length=20), nullable=True),
    sa.Column('emergency_contact_relationship', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=True),
    sa.Column('special_notes', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.ForeignKeyConstraint(['parent_id'], ['user.user_id'], ),
    sa.PrimaryKeyConstraint('child_id')
    )
    op.create_table('credit',
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('credit_id', sa.Integer(), nullable=False),
    sa.Column('parent_id', sa.Integer(), nullable=False),
    sa.Column('location_id', sa.Integer(), nullable=False),
    sa.Column('minutes_remaining', sa.Integer(), nullable=False),
    sa.Column('expiry_date', sa.Date(), nullable=True),
    sa.ForeignKeyConstraint(['location_id'], ['location.location_id'], ),
    sa.ForeignKeyConstraint(['parent_id'], ['user.user_id'], ),
    sa.PrimaryKeyConstraint('credit_id')
    )
    op.create_table('order',
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('order_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('location_id', sa.Integer(), nullable=False),
    sa.Column('order_date', sa.DateTime(), nullable=True),
    sa.Column('subtotal', sa.Float(), nullable=False),
    sa.Column('tax', sa.Float(), nullable=False),
    sa.Column('total', sa.Float(), nullable=False),
    sa.Column('payment_status', sqlmodel.sql.sqltypes.AutoString(length=20), nullable=True),
    sa.Column('transaction_id', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=True),
    sa.Column('payment_method', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=True),
    sa.ForeignKeyConstraint(['location_id'], ['location.location_id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.user_id'], ),
    sa.PrimaryKeyConstraint('order_id')
    )
    op.create_table('zone',
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('zone_id', sa.Integer(), nullable=False),
    sa.Column('location_id', sa.Integer(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=False),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('max_capacity', sa.Integer(), nullable=False),
    sa.Column('min_age', sa.Integer(), nullable=True),
    sa.Column('max_age', sa.Integer(), nullable=True),
    sa.Column('staff_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['location_id'], ['location.location_id'], ),
    sa.ForeignKeyConstraint(['staff_id'], ['user.user_id'], ),
    sa.PrimaryKeyConstraint('zone_id')
    )
    op.create_table('order_item',
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('order_item_id', sa.Integer(), nullable=False),
    sa.Column('order_id', sa.Integer(), nullable=False),
    sa.Column('item_type', sqlmodel.sql.sqltypes.AutoString(length=20), nullable=False),
    sa.Column('item_id', sa.Integer(), nullable=False),
    sa.Column('quantity', sa.Integer(), nullable=False),
    sa.Column('unit_price', sa.Float(), nullable=False),
    sa.Column('total_price', sa.Float(), nullable=False),
    sa.Column('minutes_credited', sa.Integer(), nullable=True),
    sa.Column('expiry_date', sa.Date(), nullable=True),
    sa.ForeignKeyConstraint(['order_id'], ['order.order_id'], ),
    sa.PrimaryKeyConstraint('order_item_id')
    )
    op.create_table('service',
    sa.Column('service_id', sa.Integer(), nullable=False),
    sa.Column('location_id', sa.Integer(), nullable=False),
    sa.Column('zone_id', sa.Integer(), nullable=True),
    sa.Column('service_type', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=False),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('duration_minutes', sa.Integer(), nullable=False),
    sa.Column('max_capacity', sa.Integer(), nullable=False),
    sa.Column('min_age', sa.Integer(), nullable=True),
    sa.Column('max_age', sa.Integer(), nullable=True),
    sa.Column('price', sa.Float(), nullable=False),
    sa.Column('created_by', sa.Integer(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['created_by'], ['user.user_id'], ),
    sa.ForeignKeyConstraint(['location_id'], ['location.location_id'], ),
    sa.ForeignKeyConstraint(['zone_id'], ['zone.zone_id'], ),
    sa.PrimaryKeyConstraint('service_id')
    )
    op.create_table('bundleservice',
    sa.Column('bundle_service_id', sa.Integer(), nullable=False),
    sa.Column('bundle_id', sa.Integer(), nullable=False),
    sa.Column('service_id', sa.Integer(), nullable=False),
    sa.Column('quantity', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['bundle_id'], ['bundle.bundle_id'], ),
    sa.ForeignKeyConstraint(['service_id'], ['service.service_id'], ),
    sa.PrimaryKeyConstraint('bundle_service_id')
    )
    op.create_table('session',
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('session_id', sa.Integer(), nullable=False),
    sa.Column('service_id', sa.Integer(), nullable=False),
    sa.Column('staff_id', sa.Integer(), nullable=True),
    sa.Column('start_time', sa.DateTime(), nullable=False),
    sa.Column('end_time', sa.DateTime(), nullable=False),
    sa.Column('current_capacity', sa.Integer(), nullable=True),
    sa.Column('max_capacity', sa.Integer(), nullable=False),
    sa.Column('is_canceled', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['service_id'], ['service.service_id'], ),
    sa.ForeignKeyConstraint(['staff_id'], ['user.user_id'], ),
    sa.PrimaryKeyConstraint('session_id')
    )
    op.create_table('visit',
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('visit_id', sa.Integer(), nullable=False),
    sa.Column('child_id', sa.Integer(), nullable=False),
    sa.Column('location_id', sa.Integer(), nullable=False),
    sa.Column('zone_id', sa.Integer(), nullable=True),
    sa.Column('session_id', sa.Integer(), nullable=True),
    sa.Column('order_item_id', sa.Integer(), nullable=True),
    sa.Column('credit_id', sa.Integer(), nullable=True),
    sa.Column('check_in_by_id', sa.Integer(), nullable=True),
    sa.Column('check_out_by_id', sa.Integer(), nullable=True),
    sa.Column('visit_type', sqlmodel.sql.sqltypes.AutoString(length=20), nullable=False),
    sa.Column('status', sqlmodel.sql.sqltypes.AutoString(length=20), nullable=True),
    sa.Column('check_in_time', sa.DateTime(), nullable=True),
    sa.Column('check_out_time', sa.DateTime(), nullable=True),
    sa.Column('minutes_used', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['check_in_by_id'], ['user.user_id'], ),
    sa.ForeignKeyConstraint(['check_out_by_id'], ['user.user_id'], ),
    sa.ForeignKeyConstraint(['child_id'], ['child.child_id'], ),
    sa.ForeignKeyConstraint(['credit_id'], ['credit.credit_id'], ),
    sa.ForeignKeyConstraint(['location_id'], ['location.location_id'], ),
    sa.ForeignKeyConstraint(['order_item_id'], ['order_item.order_item_id'], ),
    sa.ForeignKeyConstraint(['session_id'], ['session.session_id'], ),
    sa.ForeignKeyConstraint(['zone_id'], ['zone.zone_id'], ),
    sa.PrimaryKeyConstraint('visit_id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('visit')
    op.drop_table('session')
    op.drop_table('bundleservice')
    op.drop_table('service')
    op.drop_table('order_item')
    op.drop_table('zone')
    op.drop_table('order')
    op.drop_table('credit')
    op.drop_table('child')
    op.drop_table('user')
    op.drop_table('bundle')
    op.drop_table('role')
    op.drop_table('location')
    # ### end Alembic commands ###
